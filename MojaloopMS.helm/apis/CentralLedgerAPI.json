{
    "openapi": "3.0.1",
    "info": {
        "title": "Central Ledger API",
        "description": "API for admin processes initiated by a Mojaloop Hub Operator",
        "license": {
            "name": "apache2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://test-moja-apiman.azure-api.net/central-ledger"
        }
    ],
    "paths": {
        "/participants/{name}/initialPositionAndLimits": {
            "post": {
                "tags": [
                    "participants"
                ],
                "summary": "Add initial participant limits and position",
                "description": "Add initial participant limits and position",
                "operationId": "postParticipantsNameInitialpositionandlimits",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostInitialPositionAndLimitsRequest"
                            },
                            "example": {
                                "currency": "AED",
                                "limit": {
                                    "type": "NET_DEBIT_CAP",
                                    "value": 10000
                                },
                                "initialPosition": 0
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/participants/{name}/endpoints": {
            "post": {
                "tags": [
                    "participants"
                ],
                "summary": "Add/Update participant endpoints",
                "description": "Add/Update participant endpoints",
                "operationId": "postParticipantsNameEndpoints",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsNameEndpointsObject"
                            },
                            "example": {
                                "type": "FSPIOP_CALLBACK_URL_PARTIES_GET",
                                "value": "http://dev1-sim-payerfsp.mojaloop.live/sim/payerfsp/inbound/parties/{{partyIdType}}/{{partyIdentifier}}"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "View participant endpoints",
                "description": "View participant endpoints",
                "operationId": "getParticipantsNameEndpoints",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameEndpointsResponse"
                                },
                                "example": [
                                    {
                                        "type": "FSPIOP_CALLBACK_URL_PARTIES_GET",
                                        "value": "http://dev1-sim-payerfsp.mojaloop.live/sim/payerfsp/inbound/parties/{{partyIdType}}/{{partyIdentifier}}"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameEndpointsResponse"
                                },
                                "example": [
                                    {
                                        "type": "FSPIOP_CALLBACK_URL_PARTIES_GET",
                                        "value": "http://dev1-sim-payerfsp.mojaloop.live/sim/payerfsp/inbound/parties/{{partyIdType}}/{{partyIdentifier}}"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameEndpointsResponse"
                                },
                                "example": [
                                    {
                                        "type": "FSPIOP_CALLBACK_URL_PARTIES_GET",
                                        "value": "http://dev1-sim-payerfsp.mojaloop.live/sim/payerfsp/inbound/parties/{{partyIdType}}/{{partyIdentifier}}"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/participants/{name}/limits": {
            "put": {
                "tags": [
                    "participants"
                ],
                "summary": "Adjust participant limits",
                "description": "Adjust participant limits",
                "operationId": "put-participants-name-limits",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsNameLimitsObject"
                            },
                            "example": {
                                "currency": "AED",
                                "limit": {
                                    "type": "NET_DEBIT_CAP",
                                    "value": 10000,
                                    "alarmPercentage": 10
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PutParticipantsNameLimitsResponse"
                                },
                                "example": {
                                    "currency": "AED",
                                    "limit": {
                                        "type": "NET_DEBIT_CAP",
                                        "value": 10000,
                                        "alarmPercentage": 10
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PutParticipantsNameLimitsResponse"
                                },
                                "example": {
                                    "currency": "AED",
                                    "limit": {
                                        "type": "NET_DEBIT_CAP",
                                        "value": 10000,
                                        "alarmPercentage": 10
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PutParticipantsNameLimitsResponse"
                                },
                                "example": {
                                    "currency": "AED",
                                    "limit": {
                                        "type": "NET_DEBIT_CAP",
                                        "value": 10000,
                                        "alarmPercentage": 10
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "View participant limits",
                "description": "View participant limits",
                "operationId": "getParticipantsNameLimits",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency code",
                        "schema": {
                            "enum": [
                                "AED",
                                "AFA",
                                "AFN",
                                "ALL",
                                "AMD",
                                "ANG",
                                "AOA",
                                "AOR",
                                "ARS",
                                "AUD",
                                "AWG",
                                "AZN",
                                "BAM",
                                "BBD",
                                "BDT",
                                "BGN",
                                "BHD",
                                "BIF",
                                "BMD",
                                "BND",
                                "BOB",
                                "BRL",
                                "BSD",
                                "BTN",
                                "BWP",
                                "BYN",
                                "BZD",
                                "CAD",
                                "CDF",
                                "CHF",
                                "CLP",
                                "CNY",
                                "COP",
                                "CRC",
                                "CUC",
                                "CUP",
                                "CVE",
                                "CZK",
                                "DJF",
                                "DKK",
                                "DOP",
                                "DZD",
                                "EEK",
                                "EGP",
                                "ERN",
                                "ETB",
                                "EUR",
                                "FJD",
                                "FKP",
                                "GBP",
                                "GEL",
                                "GGP",
                                "GHS",
                                "GIP",
                                "GMD",
                                "GNF",
                                "GTQ",
                                "GYD",
                                "HKD",
                                "HNL",
                                "HRK",
                                "HTG",
                                "HUF",
                                "IDR",
                                "ILS",
                                "IMP",
                                "INR",
                                "IQD",
                                "IRR",
                                "ISK",
                                "JEP",
                                "JMD",
                                "JOD",
                                "JPY",
                                "KES",
                                "KGS",
                                "KHR",
                                "KMF",
                                "KPW",
                                "KRW",
                                "KWD",
                                "KYD",
                                "KZT",
                                "LAK",
                                "LBP",
                                "LKR",
                                "LRD",
                                "LSL",
                                "LTL",
                                "LVL",
                                "LYD",
                                "MAD",
                                "MDL",
                                "MGA",
                                "MKD",
                                "MMK",
                                "MNT",
                                "MOP",
                                "MRO",
                                "MUR",
                                "MVR",
                                "MWK",
                                "MXN",
                                "MYR",
                                "MZN",
                                "NAD",
                                "NGN",
                                "NIO",
                                "NOK",
                                "NPR",
                                "NZD",
                                "OMR",
                                "PAB",
                                "PEN",
                                "PGK",
                                "PHP",
                                "PKR",
                                "PLN",
                                "PYG",
                                "QAR",
                                "RON",
                                "RSD",
                                "RUB",
                                "RWF",
                                "SAR",
                                "SBD",
                                "SCR",
                                "SDG",
                                "SEK",
                                "SGD",
                                "SHP",
                                "SLL",
                                "SOS",
                                "SPL",
                                "SRD",
                                "STD",
                                "SVC",
                                "SYP",
                                "SZL",
                                "THB",
                                "TJS",
                                "TMT",
                                "TND",
                                "TOP",
                                "TRY",
                                "TTD",
                                "TVD",
                                "TWD",
                                "TZS",
                                "UAH",
                                "UGX",
                                "USD",
                                "UYU",
                                "UZS",
                                "VEF",
                                "VND",
                                "VUV",
                                "WST",
                                "XAF",
                                "XAG",
                                "XAU",
                                "XCD",
                                "XDR",
                                "XFO",
                                "XFU",
                                "XOF",
                                "XPD",
                                "XPF",
                                "XPT",
                                "YER",
                                "ZAR",
                                "ZMK",
                                "ZMW",
                                "ZWD",
                                "ZWL",
                                "ZWN",
                                "ZWR"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit type",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameLimitsResponse"
                                },
                                "example": [
                                    {
                                        "currency": "AED",
                                        "limit": {
                                            "type": "NET_DEBIT_CAP",
                                            "value": 10000,
                                            "alarmPercentage": 10
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameLimitsResponse"
                                },
                                "example": [
                                    {
                                        "currency": "AED",
                                        "limit": {
                                            "type": "NET_DEBIT_CAP",
                                            "value": 10000,
                                            "alarmPercentage": 10
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameLimitsResponse"
                                },
                                "example": [
                                    {
                                        "currency": "AED",
                                        "limit": {
                                            "type": "NET_DEBIT_CAP",
                                            "value": 10000,
                                            "alarmPercentage": 10
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/settlementModels": {
            "post": {
                "tags": [
                    "settlementModels"
                ],
                "summary": "Create a settlement model",
                "description": "Create a settlement model",
                "operationId": "postSettlementmodels",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlementModel"
                            },
                            "example": {
                                "name": "string",
                                "settlementGranularity": "NET",
                                "settlementInterchange": "MULTILATERAL",
                                "settlementDelay": "DEFERRED",
                                "currency": "AED",
                                "requireLiquidityCheck": true,
                                "ledgerAccountType": "INTERCHANGE_FEE",
                                "settlementAccountType": [
                                    "INTERCHANGE_FEE_SETTLEMENT",
                                    "SETTLEMENT"
                                ],
                                "autoPositionReset": true
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "settlementModels"
                ],
                "summary": "View all settlement models",
                "description": "View all settlement models",
                "operationId": "getSettlementmodels",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSettlementModelsResponse"
                                },
                                "example": [
                                    {
                                        "settlementModelId": 1,
                                        "name": "DEFERREDNET",
                                        "isActive": true,
                                        "settlementGranularity": "NET",
                                        "settlementInterchange": "MULTILATERAL",
                                        "settlementDelay": "DEFERRED",
                                        "currency": "AED",
                                        "requireLiquidityCheck": true,
                                        "ledgerAccountTypeId": "POSITION",
                                        "autoPositionReset": true
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSettlementModelsResponse"
                                },
                                "example": [
                                    {
                                        "settlementModelId": 1,
                                        "name": "DEFERREDNET",
                                        "isActive": true,
                                        "settlementGranularity": "NET",
                                        "settlementInterchange": "MULTILATERAL",
                                        "settlementDelay": "DEFERRED",
                                        "currency": "AED",
                                        "requireLiquidityCheck": true,
                                        "ledgerAccountTypeId": "POSITION",
                                        "autoPositionReset": true
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSettlementModelsResponse"
                                },
                                "example": [
                                    {
                                        "settlementModelId": 1,
                                        "name": "DEFERREDNET",
                                        "isActive": true,
                                        "settlementGranularity": "NET",
                                        "settlementInterchange": "MULTILATERAL",
                                        "settlementDelay": "DEFERRED",
                                        "currency": "AED",
                                        "requireLiquidityCheck": true,
                                        "ledgerAccountTypeId": "POSITION",
                                        "autoPositionReset": true
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/participants/{name}/accounts": {
            "post": {
                "tags": [
                    "participants"
                ],
                "summary": "Create Hub accounts",
                "description": "Create Hub accounts",
                "operationId": "postParticipantsNameAccounts",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostParticipantsNameAccountsRequest"
                            },
                            "example": {
                                "currency": "AED",
                                "type": "HUB_MULTILATERAL_SETTLEMENT"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "View participant accounts and balances",
                "description": "View participant accounts and balances",
                "operationId": "getParticipantsNameAccounts",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameAccountsResponse"
                                },
                                "example": [
                                    {
                                        "id": 3,
                                        "ledgerAccountType": "POSITION",
                                        "currency": "AED",
                                        "isActive": 0,
                                        "value": 10,
                                        "reservedValue": -90020,
                                        "changedDate": "2021-01-12T10:56:30.0000000+00:00"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameAccountsResponse"
                                },
                                "example": [
                                    {
                                        "id": 3,
                                        "ledgerAccountType": "POSITION",
                                        "currency": "AED",
                                        "isActive": 0,
                                        "value": 10,
                                        "reservedValue": -90020,
                                        "changedDate": "2021-01-12T10:56:30.0000000+00:00"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNameAccountsResponse"
                                },
                                "example": [
                                    {
                                        "id": 3,
                                        "ledgerAccountType": "POSITION",
                                        "currency": "AED",
                                        "isActive": 0,
                                        "value": 10,
                                        "reservedValue": -90020,
                                        "changedDate": "2021-01-12T10:56:30.0000000+00:00"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/participants": {
            "post": {
                "tags": [
                    "participants"
                ],
                "summary": "Create participants in the Hub",
                "description": "Create participants in the Hub",
                "operationId": "postParticipants",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostParticipantsRequest"
                            },
                            "example": {
                                "name": "string",
                                "currency": "AED"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "Get information about all participants",
                "description": "Get information about all participants",
                "operationId": "getParticipants",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsResponse"
                                },
                                "example": [
                                    {
                                        "name": "hub",
                                        "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                        "created": "2021-01-12T10:56:30.0000000+00:00",
                                        "isActive": 0,
                                        "links": {
                                            "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                        },
                                        "accounts": [
                                            {
                                                "id": 1,
                                                "ledgerAccountType": "POSITION",
                                                "currency": "AED",
                                                "isActive": 0,
                                                "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                                "createdBy": "unknown"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsResponse"
                                },
                                "example": [
                                    {
                                        "name": "hub",
                                        "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                        "created": "2021-01-12T10:56:30.0000000+00:00",
                                        "isActive": 0,
                                        "links": {
                                            "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                        },
                                        "accounts": [
                                            {
                                                "id": 1,
                                                "ledgerAccountType": "POSITION",
                                                "currency": "AED",
                                                "isActive": 0,
                                                "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                                "createdBy": "unknown"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsResponse"
                                },
                                "example": [
                                    {
                                        "name": "hub",
                                        "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                        "created": "2021-01-12T10:56:30.0000000+00:00",
                                        "isActive": 0,
                                        "links": {
                                            "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                        },
                                        "accounts": [
                                            {
                                                "id": 1,
                                                "ledgerAccountType": "POSITION",
                                                "currency": "AED",
                                                "isActive": 0,
                                                "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                                "createdBy": "unknown"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/participants/{name}": {
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "Get information about a particular participant",
                "description": "Get information about a particular participant",
                "operationId": "getParticipantsName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "participants"
                ],
                "summary": "Update participant details (activate/deactivate a participant)",
                "description": "The `PUT /participants/{name}` request is used to update details of the participant that is specified in the `{name}` path parameter. Currently, updating only the `isActive` flag is supported.",
                "operationId": "putParticipantsName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IsActiveBoolean"
                            },
                            "example": {
                                "isActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                },
                                "example": {
                                    "name": "hub",
                                    "id": "dev1-central-ledger.mojaloop.live/participants/hub",
                                    "created": "2021-01-12T10:56:30.0000000+00:00",
                                    "isActive": 0,
                                    "links": {
                                        "self": "dev1-central-ledger.mojaloop.live/participants/hub"
                                    },
                                    "accounts": [
                                        {
                                            "id": 1,
                                            "ledgerAccountType": "POSITION",
                                            "currency": "AED",
                                            "isActive": 0,
                                            "createdDate": "2021-01-12T10:56:30.0000000+00:00",
                                            "createdBy": "unknown"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/participants/{name}/accounts/{id}/transfers/{transferId}": {
            "put": {
                "tags": [
                    "participants"
                ],
                "summary": "Record a Transfer as a Funds In or Out transaction for a participant account",
                "description": "Record a Transfer as a Funds In or Out transaction for a participant account",
                "operationId": "putParticipantsNameAccountsIdTransfersTransferid",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "Transfer identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecordFundsOut"
                            },
                            "example": {
                                "action": "recordFundsOutCommit",
                                "reason": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/participants/{name}/accounts/{id}": {
            "post": {
                "tags": [
                    "participants"
                ],
                "summary": "Record Funds In or Out of participant account",
                "description": "Record Funds In or Out of participant account",
                "operationId": "postParticipantsNameAccountsId",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantFunds"
                            },
                            "example": {
                                "transferId": "08564980-98b7-4404-a59e-fbcac92cdb50",
                                "externalReference": "string",
                                "action": "recordFundsIn",
                                "reason": "string",
                                "amount": {
                                    "currency": "AED",
                                    "amount": "string"
                                },
                                "extensionList": {
                                    "extension": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "participants"
                ],
                "summary": "Update participant accounts",
                "description": "The PUT /participants/{name}/accounts/{id} request is used to update account details of a participant. Currently, updating only the `isActive` flag is supported.",
                "operationId": "putParticipantsNameAccountsId",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IsActiveBoolean"
                            },
                            "example": {
                                "isActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ErrorInformationResponse",
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "$ref": "#/components/schemas/ErrorInformation"
                                        }
                                    },
                                    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses."
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": "5100",
                                        "errorDescription": "This is an error description.",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "tags": [
                    "transaction"
                ],
                "summary": "Retrieve transaction details by a transferId",
                "description": "Retrieve transaction details by a transferId",
                "operationId": "getTransfer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transfer identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                },
                                "example": {
                                    "quoteId": "string",
                                    "transactionId": "string",
                                    "transactionRequestId": "string",
                                    "payee": {
                                        "partyIdInfo": {
                                            "partyIdType": "MSISDN",
                                            "partyIdentifier": "string",
                                            "partySubIdOrType": "string",
                                            "fspId": "string",
                                            "extensionList": {
                                                "extension": [
                                                    {
                                                        "key": "string",
                                                        "value": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "merchantClassificationCode": "string",
                                        "name": "string",
                                        "personalInfo": {
                                            "complexName": {
                                                "firstName": "string",
                                                "middleName": "string",
                                                "lastName": "string"
                                            },
                                            "dateOfBirth": "string"
                                        }
                                    },
                                    "payer": {
                                        "partyIdInfo": {
                                            "partyIdType": "MSISDN",
                                            "partyIdentifier": "string",
                                            "partySubIdOrType": "string",
                                            "fspId": "string",
                                            "extensionList": {
                                                "extension": [
                                                    {
                                                        "key": "string",
                                                        "value": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "merchantClassificationCode": "string",
                                        "name": "string",
                                        "personalInfo": {
                                            "complexName": {
                                                "firstName": "string",
                                                "middleName": "string",
                                                "lastName": "string"
                                            },
                                            "dateOfBirth": "string"
                                        }
                                    },
                                    "amount": {
                                        "currency": "AED",
                                        "amount": "string"
                                    },
                                    "transactionType": {
                                        "scenario": "DEPOSIT",
                                        "subScenario": "string",
                                        "initiator": "PAYER",
                                        "initiatorType": "CONSUMER",
                                        "refundInfo": {
                                            "originalTransactionId": "string",
                                            "refundReason": "string"
                                        },
                                        "balanceOfPayments": "string"
                                    },
                                    "note": "string",
                                    "extensionList": {
                                        "extension": [
                                            {
                                                "key": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                },
                                "example": {
                                    "quoteId": "string",
                                    "transactionId": "string",
                                    "transactionRequestId": "string",
                                    "payee": {
                                        "partyIdInfo": {
                                            "partyIdType": "MSISDN",
                                            "partyIdentifier": "string",
                                            "partySubIdOrType": "string",
                                            "fspId": "string",
                                            "extensionList": {
                                                "extension": [
                                                    {
                                                        "key": "string",
                                                        "value": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "merchantClassificationCode": "string",
                                        "name": "string",
                                        "personalInfo": {
                                            "complexName": {
                                                "firstName": "string",
                                                "middleName": "string",
                                                "lastName": "string"
                                            },
                                            "dateOfBirth": "string"
                                        }
                                    },
                                    "payer": {
                                        "partyIdInfo": {
                                            "partyIdType": "MSISDN",
                                            "partyIdentifier": "string",
                                            "partySubIdOrType": "string",
                                            "fspId": "string",
                                            "extensionList": {
                                                "extension": [
                                                    {
                                                        "key": "string",
                                                        "value": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "merchantClassificationCode": "string",
                                        "name": "string",
                                        "personalInfo": {
                                            "complexName": {
                                                "firstName": "string",
                                                "middleName": "string",
                                                "lastName": "string"
                                            },
                                            "dateOfBirth": "string"
                                        }
                                    },
                                    "amount": {
                                        "currency": "AED",
                                        "amount": "string"
                                    },
                                    "transactionType": {
                                        "scenario": "DEPOSIT",
                                        "subScenario": "string",
                                        "initiator": "PAYER",
                                        "initiatorType": "CONSUMER",
                                        "refundInfo": {
                                            "originalTransactionId": "string",
                                            "refundReason": "string"
                                        },
                                        "balanceOfPayments": "string"
                                    },
                                    "note": "string",
                                    "extensionList": {
                                        "extension": [
                                            {
                                                "key": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                },
                                "example": {
                                    "quoteId": "string",
                                    "transactionId": "string",
                                    "transactionRequestId": "string",
                                    "payee": {
                                        "partyIdInfo": {
                                            "partyIdType": "MSISDN",
                                            "partyIdentifier": "string",
                                            "partySubIdOrType": "string",
                                            "fspId": "string",
                                            "extensionList": {
                                                "extension": [
                                                    {
                                                        "key": "string",
                                                        "value": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "merchantClassificationCode": "string",
                                        "name": "string",
                                        "personalInfo": {
                                            "complexName": {
                                                "firstName": "string",
                                                "middleName": "string",
                                                "lastName": "string"
                                            },
                                            "dateOfBirth": "string"
                                        }
                                    },
                                    "payer": {
                                        "partyIdInfo": {
                                            "partyIdType": "MSISDN",
                                            "partyIdentifier": "string",
                                            "partySubIdOrType": "string",
                                            "fspId": "string",
                                            "extensionList": {
                                                "extension": [
                                                    {
                                                        "key": "string",
                                                        "value": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "merchantClassificationCode": "string",
                                        "name": "string",
                                        "personalInfo": {
                                            "complexName": {
                                                "firstName": "string",
                                                "middleName": "string",
                                                "lastName": "string"
                                            },
                                            "dateOfBirth": "string"
                                        }
                                    },
                                    "amount": {
                                        "currency": "AED",
                                        "amount": "string"
                                    },
                                    "transactionType": {
                                        "scenario": "DEPOSIT",
                                        "subScenario": "string",
                                        "initiator": "PAYER",
                                        "initiatorType": "CONSUMER",
                                        "refundInfo": {
                                            "originalTransactionId": "string",
                                            "refundReason": "string"
                                        },
                                        "balanceOfPayments": "string"
                                    },
                                    "note": "string",
                                    "extensionList": {
                                        "extension": [
                                            {
                                                "key": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settlementModels/{name}": {
            "put": {
                "tags": [
                    "settlementModels"
                ],
                "summary": "Update a settlement model (activate/deactivate a settlement model)",
                "description": "The `PUT /settlementModels/{name}` request is used to update details of the settlement model that is specified in the `{name}` path parameter. Currently, updating only the `isActive` flag is supported.",
                "operationId": "putSettlementmodelsName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Settlement model name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IsActiveBoolean"
                            },
                            "example": {
                                "isActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementModelsObject"
                                },
                                "example": {
                                    "settlementModelId": 1,
                                    "name": "DEFERREDNET",
                                    "isActive": true,
                                    "settlementGranularity": "NET",
                                    "settlementInterchange": "MULTILATERAL",
                                    "settlementDelay": "DEFERRED",
                                    "currency": "AED",
                                    "requireLiquidityCheck": true,
                                    "ledgerAccountTypeId": "POSITION",
                                    "autoPositionReset": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementModelsObject"
                                },
                                "example": {
                                    "settlementModelId": 1,
                                    "name": "DEFERREDNET",
                                    "isActive": true,
                                    "settlementGranularity": "NET",
                                    "settlementInterchange": "MULTILATERAL",
                                    "settlementDelay": "DEFERRED",
                                    "currency": "AED",
                                    "requireLiquidityCheck": true,
                                    "ledgerAccountTypeId": "POSITION",
                                    "autoPositionReset": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementModelsObject"
                                },
                                "example": {
                                    "settlementModelId": 1,
                                    "name": "DEFERREDNET",
                                    "isActive": true,
                                    "settlementGranularity": "NET",
                                    "settlementInterchange": "MULTILATERAL",
                                    "settlementDelay": "DEFERRED",
                                    "currency": "AED",
                                    "requireLiquidityCheck": true,
                                    "ledgerAccountTypeId": "POSITION",
                                    "autoPositionReset": true
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "settlementModels"
                ],
                "summary": "View settlement model by name",
                "description": "View settlement model by name",
                "operationId": "getSettlementmodelsName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Settlement model name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementModelsObject"
                                },
                                "example": {
                                    "settlementModelId": 1,
                                    "name": "DEFERREDNET",
                                    "isActive": true,
                                    "settlementGranularity": "NET",
                                    "settlementInterchange": "MULTILATERAL",
                                    "settlementDelay": "DEFERRED",
                                    "currency": "AED",
                                    "requireLiquidityCheck": true,
                                    "ledgerAccountTypeId": "POSITION",
                                    "autoPositionReset": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementModelsObject"
                                },
                                "example": {
                                    "settlementModelId": 1,
                                    "name": "DEFERREDNET",
                                    "isActive": true,
                                    "settlementGranularity": "NET",
                                    "settlementInterchange": "MULTILATERAL",
                                    "settlementDelay": "DEFERRED",
                                    "currency": "AED",
                                    "requireLiquidityCheck": true,
                                    "ledgerAccountTypeId": "POSITION",
                                    "autoPositionReset": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementModelsObject"
                                },
                                "example": {
                                    "settlementModelId": 1,
                                    "name": "DEFERREDNET",
                                    "isActive": true,
                                    "settlementGranularity": "NET",
                                    "settlementInterchange": "MULTILATERAL",
                                    "settlementDelay": "DEFERRED",
                                    "currency": "AED",
                                    "requireLiquidityCheck": true,
                                    "ledgerAccountTypeId": "POSITION",
                                    "autoPositionReset": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/participants/limits": {
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "View limits for all participants",
                "description": "View limits for all participants",
                "operationId": "getParticipantsLimits",
                "parameters": [
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency code",
                        "schema": {
                            "enum": [
                                "AED",
                                "AFA",
                                "AFN",
                                "ALL",
                                "AMD",
                                "ANG",
                                "AOA",
                                "AOR",
                                "ARS",
                                "AUD",
                                "AWG",
                                "AZN",
                                "BAM",
                                "BBD",
                                "BDT",
                                "BGN",
                                "BHD",
                                "BIF",
                                "BMD",
                                "BND",
                                "BOB",
                                "BRL",
                                "BSD",
                                "BTN",
                                "BWP",
                                "BYN",
                                "BZD",
                                "CAD",
                                "CDF",
                                "CHF",
                                "CLP",
                                "CNY",
                                "COP",
                                "CRC",
                                "CUC",
                                "CUP",
                                "CVE",
                                "CZK",
                                "DJF",
                                "DKK",
                                "DOP",
                                "DZD",
                                "EEK",
                                "EGP",
                                "ERN",
                                "ETB",
                                "EUR",
                                "FJD",
                                "FKP",
                                "GBP",
                                "GEL",
                                "GGP",
                                "GHS",
                                "GIP",
                                "GMD",
                                "GNF",
                                "GTQ",
                                "GYD",
                                "HKD",
                                "HNL",
                                "HRK",
                                "HTG",
                                "HUF",
                                "IDR",
                                "ILS",
                                "IMP",
                                "INR",
                                "IQD",
                                "IRR",
                                "ISK",
                                "JEP",
                                "JMD",
                                "JOD",
                                "JPY",
                                "KES",
                                "KGS",
                                "KHR",
                                "KMF",
                                "KPW",
                                "KRW",
                                "KWD",
                                "KYD",
                                "KZT",
                                "LAK",
                                "LBP",
                                "LKR",
                                "LRD",
                                "LSL",
                                "LTL",
                                "LVL",
                                "LYD",
                                "MAD",
                                "MDL",
                                "MGA",
                                "MKD",
                                "MMK",
                                "MNT",
                                "MOP",
                                "MRO",
                                "MUR",
                                "MVR",
                                "MWK",
                                "MXN",
                                "MYR",
                                "MZN",
                                "NAD",
                                "NGN",
                                "NIO",
                                "NOK",
                                "NPR",
                                "NZD",
                                "OMR",
                                "PAB",
                                "PEN",
                                "PGK",
                                "PHP",
                                "PKR",
                                "PLN",
                                "PYG",
                                "QAR",
                                "RON",
                                "RSD",
                                "RUB",
                                "RWF",
                                "SAR",
                                "SBD",
                                "SCR",
                                "SDG",
                                "SEK",
                                "SGD",
                                "SHP",
                                "SLL",
                                "SOS",
                                "SPL",
                                "SRD",
                                "STD",
                                "SVC",
                                "SYP",
                                "SZL",
                                "THB",
                                "TJS",
                                "TMT",
                                "TND",
                                "TOP",
                                "TRY",
                                "TTD",
                                "TVD",
                                "TWD",
                                "TZS",
                                "UAH",
                                "UGX",
                                "USD",
                                "UYU",
                                "UZS",
                                "VEF",
                                "VND",
                                "VUV",
                                "WST",
                                "XAF",
                                "XAG",
                                "XAU",
                                "XCD",
                                "XDR",
                                "XFO",
                                "XFU",
                                "XOF",
                                "XPD",
                                "XPF",
                                "XPT",
                                "YER",
                                "ZAR",
                                "ZMK",
                                "ZMW",
                                "ZWD",
                                "ZWL",
                                "ZWN",
                                "ZWR"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit type",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsLimitsResponse"
                                },
                                "example": [
                                    {
                                        "name": "payerfsp",
                                        "currency": "AED",
                                        "limit": {
                                            "type": "NET_DEBIT_CAP",
                                            "value": 10000,
                                            "alarmPercentage": 10
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsLimitsResponse"
                                },
                                "example": [
                                    {
                                        "name": "payerfsp",
                                        "currency": "AED",
                                        "limit": {
                                            "type": "NET_DEBIT_CAP",
                                            "value": 10000,
                                            "alarmPercentage": 10
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsLimitsResponse"
                                },
                                "example": [
                                    {
                                        "name": "payerfsp",
                                        "currency": "AED",
                                        "limit": {
                                            "type": "NET_DEBIT_CAP",
                                            "value": 10000,
                                            "alarmPercentage": 10
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/participants/{name}/positions": {
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "View participant positions",
                "description": "View participant positions",
                "operationId": "getParticipantsNamePositions",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Participant name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency code",
                        "schema": {
                            "enum": [
                                "AED",
                                "AFA",
                                "AFN",
                                "ALL",
                                "AMD",
                                "ANG",
                                "AOA",
                                "AOR",
                                "ARS",
                                "AUD",
                                "AWG",
                                "AZN",
                                "BAM",
                                "BBD",
                                "BDT",
                                "BGN",
                                "BHD",
                                "BIF",
                                "BMD",
                                "BND",
                                "BOB",
                                "BRL",
                                "BSD",
                                "BTN",
                                "BWP",
                                "BYN",
                                "BZD",
                                "CAD",
                                "CDF",
                                "CHF",
                                "CLP",
                                "CNY",
                                "COP",
                                "CRC",
                                "CUC",
                                "CUP",
                                "CVE",
                                "CZK",
                                "DJF",
                                "DKK",
                                "DOP",
                                "DZD",
                                "EEK",
                                "EGP",
                                "ERN",
                                "ETB",
                                "EUR",
                                "FJD",
                                "FKP",
                                "GBP",
                                "GEL",
                                "GGP",
                                "GHS",
                                "GIP",
                                "GMD",
                                "GNF",
                                "GTQ",
                                "GYD",
                                "HKD",
                                "HNL",
                                "HRK",
                                "HTG",
                                "HUF",
                                "IDR",
                                "ILS",
                                "IMP",
                                "INR",
                                "IQD",
                                "IRR",
                                "ISK",
                                "JEP",
                                "JMD",
                                "JOD",
                                "JPY",
                                "KES",
                                "KGS",
                                "KHR",
                                "KMF",
                                "KPW",
                                "KRW",
                                "KWD",
                                "KYD",
                                "KZT",
                                "LAK",
                                "LBP",
                                "LKR",
                                "LRD",
                                "LSL",
                                "LTL",
                                "LVL",
                                "LYD",
                                "MAD",
                                "MDL",
                                "MGA",
                                "MKD",
                                "MMK",
                                "MNT",
                                "MOP",
                                "MRO",
                                "MUR",
                                "MVR",
                                "MWK",
                                "MXN",
                                "MYR",
                                "MZN",
                                "NAD",
                                "NGN",
                                "NIO",
                                "NOK",
                                "NPR",
                                "NZD",
                                "OMR",
                                "PAB",
                                "PEN",
                                "PGK",
                                "PHP",
                                "PKR",
                                "PLN",
                                "PYG",
                                "QAR",
                                "RON",
                                "RSD",
                                "RUB",
                                "RWF",
                                "SAR",
                                "SBD",
                                "SCR",
                                "SDG",
                                "SEK",
                                "SGD",
                                "SHP",
                                "SLL",
                                "SOS",
                                "SPL",
                                "SRD",
                                "STD",
                                "SVC",
                                "SYP",
                                "SZL",
                                "THB",
                                "TJS",
                                "TMT",
                                "TND",
                                "TOP",
                                "TRY",
                                "TTD",
                                "TVD",
                                "TWD",
                                "TZS",
                                "UAH",
                                "UGX",
                                "USD",
                                "UYU",
                                "UZS",
                                "VEF",
                                "VND",
                                "VUV",
                                "WST",
                                "XAF",
                                "XAG",
                                "XAU",
                                "XCD",
                                "XDR",
                                "XFO",
                                "XFU",
                                "XOF",
                                "XPD",
                                "XPF",
                                "XPT",
                                "YER",
                                "ZAR",
                                "ZMK",
                                "ZMW",
                                "ZWD",
                                "ZWL",
                                "ZWN",
                                "ZWR"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNamePositionsResponse"
                                },
                                "example": [
                                    {
                                        "currency": "AED",
                                        "value": 10,
                                        "changedDate": "2021-01-12T10:56:30.0000000+00:00"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNamePositionsResponse"
                                },
                                "example": [
                                    {
                                        "currency": "AED",
                                        "value": 10,
                                        "changedDate": "2021-01-12T10:56:30.0000000+00:00"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipantsNamePositionsResponse"
                                },
                                "example": [
                                    {
                                        "currency": "AED",
                                        "value": 10,
                                        "changedDate": "2021-01-12T10:56:30.0000000+00:00"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Accounts": {
                "title": "Accounts",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/IndividualAccount"
                },
                "description": "The list of ledger accounts configured for the participant."
            },
            "Amount": {
                "title": "Amount",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "type": "string",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed."
            },
            "AutoPositionReset": {
                "title": "AutoPositionReset",
                "type": "boolean",
                "description": "Automatic position reset setting, which determines whether to execute the settlement transfer or not.",
                "example": true
            },
            "Currency": {
                "title": "CurrencyEnum",
                "maxLength": 3,
                "minLength": 3,
                "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                ],
                "type": "string",
                "description": "The currency codes defined in ISO 4217 as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "example": "AED"
            },
            "DateTime": {
                "title": "DateTime",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
                "type": "string",
                "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
                "example": "2021-01-12T10:56:30Z"
            },
            "ErrorInformation": {
                "title": "ErrorInformation",
                "required": [
                    "errorCode",
                    "errorDescription"
                ],
                "type": "object",
                "properties": {
                    "errorCode": {
                        "pattern": "^[1-9]\\d{3}$",
                        "type": "string",
                        "description": "Specific error number.",
                        "example": "5100"
                    },
                    "errorDescription": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Error description string.",
                        "example": "This is an error description."
                    },
                    "extensionList": {
                        "$ref": "#/components/schemas/ExtensionList"
                    }
                },
                "description": "Data model for the complex type ErrorInformation."
            },
            "Extension": {
                "title": "Extension",
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "description": "Extension key."
                    },
                    "value": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Extension value."
                    }
                },
                "description": "Data model for the complex type Extension"
            },
            "ExtensionList": {
                "title": "ExtensionList",
                "required": [
                    "extension"
                ],
                "type": "object",
                "properties": {
                    "extension": {
                        "maxItems": 16,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        },
                        "description": "Number of Extension elements"
                    }
                },
                "description": "Data model for the complex type ExtensionList"
            },
            "GetParticipantsLimitsResponse": {
                "title": "GetParticipantsLimitsResponse",
                "type": "array",
                "items": {
                    "required": [
                        "name",
                        "currency",
                        "limit"
                    ],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name of the participant.",
                            "example": "payerfsp"
                        },
                        "currency": {
                            "$ref": "#/components/schemas/Currency"
                        },
                        "limit": {
                            "$ref": "#/components/schemas/ParticipantLimit"
                        }
                    }
                },
                "description": "GET /participants/limits response JSON array. Each limit in the list is applied to the specified participant name and currency in each object."
            },
            "GetParticipantsNameAccountsResponse": {
                "title": "GetParticipantsNameAccountsResponse",
                "type": "array",
                "items": {
                    "required": [
                        "id",
                        "name",
                        "ledgerAccountType",
                        "currency",
                        "isActive",
                        "value",
                        "reservedValue",
                        "changedDate"
                    ],
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Account identifier.",
                            "example": 3
                        },
                        "ledgerAccountType": {
                            "type": "string",
                            "description": "Type of ledger account.",
                            "example": "POSITION"
                        },
                        "currency": {
                            "$ref": "#/components/schemas/Currency"
                        },
                        "isActive": {
                            "$ref": "#/components/schemas/IsActive"
                        },
                        "value": {
                            "type": "number",
                            "description": "Account balance.",
                            "example": 10
                        },
                        "reservedValue": {
                            "type": "number",
                            "description": "Value reserved in account.",
                            "example": -90020
                        },
                        "changedDate": {
                            "$ref": "#/components/schemas/DateTime"
                        }
                    }
                },
                "description": "GET /participants/{name}/accounts response JSON array."
            },
            "GetParticipantsNameEndpointsResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ParticipantsNameEndpointsObject"
                },
                "description": "GET /participants/{name}/endpoints response JSON array."
            },
            "GetParticipantsNameLimitsResponse": {
                "title": "GetParticipantsNameLimitsResponse",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ParticipantsNameLimitsObject"
                },
                "description": "GET /participants/{name}/limits response JSON array."
            },
            "GetParticipantsNamePositionsResponse": {
                "title": "GetParticipantsNamePositionsResponse",
                "type": "array",
                "items": {
                    "required": [
                        "currency",
                        "value",
                        "changedDate"
                    ],
                    "type": "object",
                    "properties": {
                        "currency": {
                            "$ref": "#/components/schemas/Currency"
                        },
                        "value": {
                            "type": "number",
                            "description": "Position value.",
                            "example": 10
                        },
                        "changedDate": {
                            "$ref": "#/components/schemas/DateTime"
                        }
                    }
                },
                "description": "GET /participants/{name}/positions response JSON array."
            },
            "GetParticipantsNameResponse": {
                "title": "Participant",
                "required": [
                    "name",
                    "id",
                    "created",
                    "isActive",
                    "links",
                    "accounts"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the participant.",
                        "example": "hub"
                    },
                    "id": {
                        "type": "string",
                        "description": "The identifier of the participant in the form of a fully qualified domain name combined with the participant's `fspId`.",
                        "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                    },
                    "created": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "isActive": {
                        "$ref": "#/components/schemas/IsActive"
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "type": "string",
                                "description": "Fully qualified domain name combined with the `fspId` of the participant.",
                                "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                            }
                        },
                        "description": "List of links for a Hypermedia-Driven RESTful Web Service."
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/Accounts"
                    }
                }
            },
            "GetParticipantsResponse": {
                "title": "GetParticipantsResponse",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Participant"
                },
                "description": "GET /participants response JSON array."
            },
            "GetSettlementModelsNameResponse": {
                "title": "SettlementModelsObject",
                "required": [
                    "settlementModelId",
                    "name",
                    "isActive",
                    "settlementGranularity",
                    "settlementInterchange",
                    "settlementDelay",
                    "currency",
                    "requireLiquidityCheck",
                    "ledgerAccountTypeId",
                    "autoPositionReset"
                ],
                "type": "object",
                "properties": {
                    "settlementModelId": {
                        "type": "integer",
                        "description": "Settlement model identifier.",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Settlement model name.",
                        "example": "DEFERREDNET"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "A flag to indicate whether or not the settlement model is active.",
                        "example": true
                    },
                    "settlementGranularity": {
                        "$ref": "#/components/schemas/SettlementGranularity"
                    },
                    "settlementInterchange": {
                        "$ref": "#/components/schemas/SettlementInterchange"
                    },
                    "settlementDelay": {
                        "$ref": "#/components/schemas/SettlementDelay"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "requireLiquidityCheck": {
                        "$ref": "#/components/schemas/RequireLiquidityCheck"
                    },
                    "ledgerAccountTypeId": {
                        "type": "string",
                        "description": "Type of ledger account.",
                        "example": "POSITION"
                    },
                    "autoPositionReset": {
                        "$ref": "#/components/schemas/AutoPositionReset"
                    }
                },
                "description": "Settlement model JSON object."
            },
            "GetSettlementModelsResponse": {
                "title": "GetSettlementModelsResponse",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SettlementModelsObject"
                },
                "description": "GET /settlementModels response JSON array."
            },
            "GetTransactionResponse": {
                "title": "GetTransactionResponse",
                "type": "object",
                "properties": {
                    "quoteId": {
                        "$ref": "#/components/schemas/QuoteId"
                    },
                    "transactionId": {
                        "$ref": "#/components/schemas/TransactionId"
                    },
                    "transactionRequestId": {
                        "type": "string",
                        "description": "Identifies an optional previously-sent transaction request."
                    },
                    "payee": {
                        "$ref": "#/components/schemas/Party"
                    },
                    "payer": {
                        "$ref": "#/components/schemas/Party"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Money"
                    },
                    "transactionType": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "note": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "A memo that will be attached to the transaction."
                    },
                    "extensionList": {
                        "$ref": "#/components/schemas/ExtensionList"
                    }
                },
                "description": "GET /transaction/{id} response object"
            },
            "IndividualAccount": {
                "title": "IndividualAccount",
                "required": [
                    "id",
                    "ledgerAccountType",
                    "currency",
                    "isActive",
                    "createdDate",
                    "createdBy"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Identifier of the ledger account.",
                        "example": 1
                    },
                    "ledgerAccountType": {
                        "type": "string",
                        "description": "Type of the ledger account.",
                        "example": "POSITION"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "isActive": {
                        "$ref": "#/components/schemas/IsActive"
                    },
                    "createdDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The entity that created the ledger account.",
                        "example": "unknown"
                    }
                },
                "description": "Data model for the complex type IndividualAccount."
            },
            "IsActive": {
                "title": "IsActive",
                "type": "integer",
                "description": "Indicates whether or not a ledger account / participant is active. Possible values are 1 and 0."
            },
            "IsActiveBoolean": {
                "title": "IsActiveBoolean",
                "required": [
                    "isActive"
                ],
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean",
                        "description": "Indicates whether or not an account / participant / settlement model is active."
                    }
                }
            },
            "Limit": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Limit type",
                        "example": "NET_DEBIT_CAP"
                    },
                    "value": {
                        "enum": [
                            0
                        ],
                        "type": "number",
                        "description": "Limit value",
                        "example": 10000,
                        "x-constraint": {
                            "positive": true
                        }
                    }
                },
                "description": "Participant Limit"
            },
            "Money": {
                "title": "Money",
                "required": [
                    "currency",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Amount"
                    }
                },
                "description": "Data model for the complex type Money."
            },
            "Participant": {
                "title": "Participant",
                "required": [
                    "name",
                    "id",
                    "created",
                    "isActive",
                    "links",
                    "accounts"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the participant.",
                        "example": "hub"
                    },
                    "id": {
                        "type": "string",
                        "description": "The identifier of the participant in the form of a fully qualified domain name combined with the participant's `fspId`.",
                        "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                    },
                    "created": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "isActive": {
                        "$ref": "#/components/schemas/IsActive"
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "type": "string",
                                "description": "Fully qualified domain name combined with the `fspId` of the participant.",
                                "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                            }
                        },
                        "description": "List of links for a Hypermedia-Driven RESTful Web Service."
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/Accounts"
                    }
                }
            },
            "ParticipantFunds": {
                "required": [
                    "transferId",
                    "externalReference",
                    "action",
                    "reason",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "transferId": {
                        "type": "string",
                        "example": "08564980-98b7-4404-a59e-fbcac92cdb50",
                        "x-format": {
                            "guid": true
                        }
                    },
                    "externalReference": {
                        "type": "string"
                    },
                    "action": {
                        "enum": [
                            "recordFundsIn",
                            "recordFundsOutPrepareReserve"
                        ],
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Money"
                    },
                    "extensionList": {
                        "$ref": "#/components/schemas/ExtensionList"
                    }
                }
            },
            "ParticipantLimit": {
                "required": [
                    "type",
                    "value",
                    "alarmPercentage"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Limit type",
                        "example": "NET_DEBIT_CAP"
                    },
                    "value": {
                        "type": "number",
                        "description": "Limit value",
                        "example": 10000
                    },
                    "alarmPercentage": {
                        "type": "number",
                        "description": "An alarm notification is triggered when a pre-specified percentage of the limit is reached. Specifying an alarmPercentage is optional. If not specified, it will default to 10 percent.",
                        "example": 10
                    }
                },
                "description": "Participant limit"
            },
            "ParticipantsNameEndpointsObject": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Endpoint type",
                        "example": "FSPIOP_CALLBACK_URL_PARTIES_GET"
                    },
                    "value": {
                        "type": "string",
                        "description": "Endpoint value",
                        "example": "http://dev1-sim-payerfsp.mojaloop.live/sim/payerfsp/inbound/parties/{{partyIdType}}/{{partyIdentifier}}"
                    }
                }
            },
            "ParticipantsNameLimitsObject": {
                "required": [
                    "currency",
                    "limit"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "limit": {
                        "$ref": "#/components/schemas/ParticipantLimit"
                    }
                }
            },
            "Party": {
                "title": "Party",
                "required": [
                    "partyIdInfo"
                ],
                "type": "object",
                "properties": {
                    "partyIdInfo": {
                        "$ref": "#/components/schemas/PartyIdInfo"
                    },
                    "merchantClassificationCode": {
                        "pattern": "^[\\d]{1,4}$",
                        "type": "string",
                        "description": "Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments."
                    },
                    "name": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Display name of the Party, could be a real name or a nick name."
                    },
                    "personalInfo": {
                        "$ref": "#/components/schemas/PartyPersonalInfo"
                    }
                },
                "description": "Data model for the complex type Party."
            },
            "PartyComplexName": {
                "title": "PartyComplexName",
                "type": "object",
                "properties": {
                    "firstName": {
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^(?!\\s*$)[\\w .,'-]{1,128}$",
                        "type": "string",
                        "description": "Party’s first name."
                    },
                    "middleName": {
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^(?!\\s*$)[\\w .,'-]{1,128}$",
                        "type": "string",
                        "description": "Party’s middle name."
                    },
                    "lastName": {
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^(?!\\s*$)[\\w .,'-]{1,128}$",
                        "type": "string",
                        "description": "Party’s last name."
                    }
                },
                "description": "Data model for the complex type PartyComplexName."
            },
            "PartyIdentifier": {
                "title": "PartyIdentifier",
                "maxLength": 128,
                "minLength": 1,
                "type": "string",
                "description": "Identifier of the Party."
            },
            "PartyIdInfo": {
                "title": "PartyIdInfo",
                "required": [
                    "partyIdType",
                    "partyIdentifier"
                ],
                "type": "object",
                "properties": {
                    "partyIdType": {
                        "$ref": "#/components/schemas/PartyIdType"
                    },
                    "partyIdentifier": {
                        "$ref": "#/components/schemas/PartyIdentifier"
                    },
                    "partySubIdOrType": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "A sub-identifier or sub-type for the Party."
                    },
                    "fspId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "description": "FSP id (if known)"
                    },
                    "extensionList": {
                        "$ref": "#/components/schemas/ExtensionList"
                    }
                },
                "description": "Data model for the complex type PartyIdInfo."
            },
            "PartyIdType": {
                "title": "PartyIdTypeEnum",
                "enum": [
                    "MSISDN",
                    "EMAIL",
                    "PERSONAL_ID",
                    "BUSINESS",
                    "DEVICE",
                    "ACCOUNT_ID",
                    "IBAN",
                    "ALIAS"
                ],
                "type": "string",
                "description": "Below are the allowed values for the enumeration - MSISDN An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the ITU-T E.164 standard. Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - EMAIL An email is used as reference to a participant. The format of the email should be according to the informational RFC 3696. - PERSONAL_ID A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element. - BUSINESS A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used. - DEVICE A specific device (for example, a POS or ATM) id connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or FSP account id should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP. - IBAN A bank account number or FSP account id is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace. - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
            },
            "PartyPersonalInfo": {
                "title": "PartyPersonalInfo",
                "type": "object",
                "properties": {
                    "complexName": {
                        "$ref": "#/components/schemas/PartyComplexName"
                    },
                    "dateOfBirth": {
                        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                        "type": "string",
                        "description": "Date of birth for the Party."
                    }
                },
                "description": "Data model for the complex type PartyPersonalInfo."
            },
            "PostInitialPositionAndLimitsRequest": {
                "required": [
                    "currency",
                    "limit"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "limit": {
                        "$ref": "#/components/schemas/Limit"
                    },
                    "initialPosition": {
                        "type": "number",
                        "description": "Initial Position Value",
                        "example": 0
                    }
                }
            },
            "PostParticipantsNameAccountsRequest": {
                "required": [
                    "currency",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "type": {
                        "type": "string",
                        "description": "Account type",
                        "example": "HUB_MULTILATERAL_SETTLEMENT"
                    }
                }
            },
            "PostParticipantsNameAccountsResponse": {
                "title": "Participant",
                "required": [
                    "name",
                    "id",
                    "created",
                    "isActive",
                    "links",
                    "accounts"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the participant.",
                        "example": "hub"
                    },
                    "id": {
                        "type": "string",
                        "description": "The identifier of the participant in the form of a fully qualified domain name combined with the participant's `fspId`.",
                        "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                    },
                    "created": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "isActive": {
                        "$ref": "#/components/schemas/IsActive"
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "type": "string",
                                "description": "Fully qualified domain name combined with the `fspId` of the participant.",
                                "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                            }
                        },
                        "description": "List of links for a Hypermedia-Driven RESTful Web Service."
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/Accounts"
                    }
                }
            },
            "PostParticipantsRequest": {
                "required": [
                    "name",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 30,
                        "minLength": 2,
                        "type": "string",
                        "description": "Name of the participant",
                        "x-format": {
                            "alphanum": true
                        }
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    }
                }
            },
            "PostParticipantsResponse": {
                "title": "Participant",
                "required": [
                    "name",
                    "id",
                    "created",
                    "isActive",
                    "links",
                    "accounts"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the participant.",
                        "example": "hub"
                    },
                    "id": {
                        "type": "string",
                        "description": "The identifier of the participant in the form of a fully qualified domain name combined with the participant's `fspId`.",
                        "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                    },
                    "created": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "isActive": {
                        "$ref": "#/components/schemas/IsActive"
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "type": "string",
                                "description": "Fully qualified domain name combined with the `fspId` of the participant.",
                                "example": "dev1-central-ledger.mojaloop.live/participants/hub"
                            }
                        },
                        "description": "List of links for a Hypermedia-Driven RESTful Web Service."
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/Accounts"
                    }
                }
            },
            "PutParticipantsNameLimitsResponse": {
                "required": [
                    "currency",
                    "limit"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "limit": {
                        "$ref": "#/components/schemas/ParticipantLimit"
                    }
                }
            },
            "QuoteId": {
                "title": "QuoteId",
                "minLength": 1,
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "type": "string",
                "description": "Quote Identifier. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘). A minLength of 1 has been specified due to the regex not being validated on empty strings."
            },
            "RecordFundsOut": {
                "required": [
                    "action",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "action": {
                        "enum": [
                            "recordFundsOutCommit",
                            "recordFundsOutAbort"
                        ],
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "Refund": {
                "title": "Refund",
                "required": [
                    "originalTransactionId"
                ],
                "type": "object",
                "properties": {
                    "originalTransactionId": {
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "type": "string",
                        "description": "Reference to the original transaction id that is requested to be refunded."
                    },
                    "refundReason": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Free text indicating the reason for the refund."
                    }
                },
                "description": "Data model for the complex type Refund."
            },
            "RequireLiquidityCheck": {
                "title": "RequireLiquidityCheck",
                "type": "boolean",
                "description": "Liquidity check boolean.",
                "example": true
            },
            "SettlementDelay": {
                "title": "SettlementDelay",
                "enum": [
                    "IMMEDIATE",
                    "DEFERRED"
                ],
                "type": "string",
                "description": "Specifies if settlement happens immediately after a transfer has completed or with a delay. Allowed values for the enumeration are: IMMEDIATE - Settlement happens immediately after a transfer has completed. DEFERRED - Settlement is managed by the Hub operator on-demand or via a schedule.",
                "example": "DEFERRED"
            },
            "SettlementGranularity": {
                "title": "SettlementGranularity",
                "enum": [
                    "GROSS",
                    "NET"
                ],
                "type": "string",
                "description": "Specifies whether transfers are settled one by one or as a batch. Allowed values for the enumeration are: GROSS - Settlement is executed after each transfer is completed, that is, there is a settlement transaction that corresponds to every transaction. NET - A group of transfers is settled together in a single settlement transaction, with each participant settling the net of all transfers over a given period of time.",
                "example": "NET"
            },
            "SettlementInterchange": {
                "title": "SettlementInterchange",
                "enum": [
                    "BILATERAL",
                    "MULTILATERAL"
                ],
                "type": "string",
                "description": "Specifies the type of settlement arrangement between parties. Allowed values for the enumeration are: BILATERAL - Each participant settles its obligations with each other separately, and the scheme is not a party to the settlement. MULTILATERAL - Each participant settles with the scheme for the net of its obligations, rather than settling separately with each other party.",
                "example": "MULTILATERAL"
            },
            "SettlementModel": {
                "required": [
                    "autoPositionReset",
                    "ledgerAccountType",
                    "name",
                    "requireLiquidityCheck",
                    "settlementDelay",
                    "currency",
                    "settlementGranularity",
                    "settlementInterchange",
                    "settlementAccountType"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 30,
                        "minLength": 2,
                        "type": "string",
                        "description": "Name of the settlement model",
                        "x-format": {
                            "alphanum": true
                        }
                    },
                    "settlementGranularity": {
                        "$ref": "#/components/schemas/SettlementGranularity"
                    },
                    "settlementInterchange": {
                        "$ref": "#/components/schemas/SettlementInterchange"
                    },
                    "settlementDelay": {
                        "$ref": "#/components/schemas/SettlementDelay"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "requireLiquidityCheck": {
                        "$ref": "#/components/schemas/RequireLiquidityCheck"
                    },
                    "ledgerAccountType": {
                        "enum": [
                            "INTERCHANGE_FEE",
                            "POSITION",
                            "SETTLEMENT"
                        ],
                        "type": "string",
                        "description": "Account type for the settlement model: POSITION, SETTLEMENT, or INTERCHANGE_FEE."
                    },
                    "settlementAccountType": {
                        "type": "string",
                        "description": "A special type of ledger account into which settlements should be settled: SETTLEMENT or INTERCHANGE_FEE_SETTLEMENT.",
                        "example": [
                            "INTERCHANGE_FEE_SETTLEMENT",
                            "SETTLEMENT"
                        ]
                    },
                    "autoPositionReset": {
                        "$ref": "#/components/schemas/AutoPositionReset"
                    }
                }
            },
            "SettlementModelsObject": {
                "title": "SettlementModelsObject",
                "required": [
                    "settlementModelId",
                    "name",
                    "isActive",
                    "settlementGranularity",
                    "settlementInterchange",
                    "settlementDelay",
                    "currency",
                    "requireLiquidityCheck",
                    "ledgerAccountTypeId",
                    "autoPositionReset"
                ],
                "type": "object",
                "properties": {
                    "settlementModelId": {
                        "type": "integer",
                        "description": "Settlement model identifier.",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Settlement model name.",
                        "example": "DEFERREDNET"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "A flag to indicate whether or not the settlement model is active.",
                        "example": true
                    },
                    "settlementGranularity": {
                        "$ref": "#/components/schemas/SettlementGranularity"
                    },
                    "settlementInterchange": {
                        "$ref": "#/components/schemas/SettlementInterchange"
                    },
                    "settlementDelay": {
                        "$ref": "#/components/schemas/SettlementDelay"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "requireLiquidityCheck": {
                        "$ref": "#/components/schemas/RequireLiquidityCheck"
                    },
                    "ledgerAccountTypeId": {
                        "type": "string",
                        "description": "Type of ledger account.",
                        "example": "POSITION"
                    },
                    "autoPositionReset": {
                        "$ref": "#/components/schemas/AutoPositionReset"
                    }
                },
                "description": "Settlement model JSON object."
            },
            "TransactionId": {
                "title": "TransactionId",
                "minLength": 1,
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "type": "string",
                "description": "Transaction Identifier. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘). A minLength of 1 has been specified due to the regex not being validated on empty strings."
            },
            "TransactionType": {
                "title": "TransactionType",
                "required": [
                    "scenario",
                    "initiator",
                    "initiatorType"
                ],
                "type": "object",
                "properties": {
                    "scenario": {
                        "enum": [
                            "DEPOSIT",
                            "WITHDRAWAL",
                            "TRANSFER",
                            "PAYMENT",
                            "REFUND"
                        ],
                        "type": "string",
                        "description": "Below are the allowed values for the enumeration. - DEPOSIT Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User. - WITHDRAWAL Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer. - TRANSFER Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction. - PAYMENT Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on. - REFUND Used for performing a refund of transaction."
                    },
                    "subScenario": {
                        "pattern": "^[A-Z_]{1,32}$",
                        "type": "string",
                        "description": "Possible sub-scenario, defined locally within the scheme."
                    },
                    "initiator": {
                        "enum": [
                            "PAYER",
                            "PAYEE"
                        ],
                        "type": "string",
                        "description": "Who is initiating the transaction - Payer or Payee"
                    },
                    "initiatorType": {
                        "enum": [
                            "CONSUMER",
                            "AGENT",
                            "BUSINESS",
                            "DEVICE"
                        ],
                        "type": "string",
                        "description": "Consumer, agent, business, …"
                    },
                    "refundInfo": {
                        "$ref": "#/components/schemas/Refund"
                    },
                    "balanceOfPayments": {
                        "pattern": "^[1-9]\\d{2}$",
                        "type": "string",
                        "description": "Balance of Payments code."
                    }
                },
                "description": "Data model for the complex type TransactionType."
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}