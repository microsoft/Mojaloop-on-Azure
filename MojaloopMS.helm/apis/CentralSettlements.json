{
    "openapi": "3.0.1",
    "info": {
        "title": "MOJALOOP Central Settlements",
        "description": "Mojaloop API for Settlements.",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://test-moja-apiman.azure-api.net/central-settlement-service"
        },
        {
            "url": "https://test-moja-apiman.azure-api.net/central-settlement-service"
        }
    ],
    "paths": {
        "/settlementWindows/{id}": {
            "post": {
                "tags": [
                    "closeSettlementWindow",
                    "sampled"
                ],
                "summary": "closeSettlementWindow",
                "description": "Closes requested window and opens a new one.",
                "operationId": "closeSettlementWindow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A JSON object containing settlement window closure info.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlementWindowClosurePayload"
                            },
                            "example": {
                                "state": "CLOSED",
                                "reason": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settlement window closed and new window opened.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementWindow"
                                },
                                "example": {
                                    "id": 0,
                                    "reason": "string",
                                    "state": "string",
                                    "createdDate": "string",
                                    "changedDate": "string",
                                    "content": [
                                        {
                                            "id": 0,
                                            "state": "string",
                                            "ledgerAccountType": "string",
                                            "currencyId": "string",
                                            "createdDate": "string",
                                            "changedDate": "string",
                                            "settlementId": 0
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "getSettlementWindowById",
                    "sampled"
                ],
                "summary": "getSettlementWindowById",
                "description": "Returns a Settlement Window by id.",
                "operationId": "getSettlementWindowById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A valid settlement window id to be supplied in the query.\n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A settlement window's data returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementWindow"
                                },
                                "example": {
                                    "id": 0,
                                    "reason": "string",
                                    "state": "string",
                                    "createdDate": "string",
                                    "changedDate": "string",
                                    "content": [
                                        {
                                            "id": 0,
                                            "state": "string",
                                            "ledgerAccountType": "string",
                                            "currencyId": "string",
                                            "createdDate": "string",
                                            "changedDate": "string",
                                            "settlementId": 0
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settlements": {
            "post": {
                "tags": [
                    "createSettlement",
                    "sampled"
                ],
                "summary": "createSettlement",
                "description": "Triggers settlement creation. Returns settlement report.",
                "operationId": "createSettlement",
                "requestBody": {
                    "description": "A JSON object containing settlement windows to be included.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlementEventPayload"
                            },
                            "example": {
                                "settlementModel": "string",
                                "reason": "string",
                                "settlementWindows": [
                                    {
                                        "id": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created settlement with all windows and accounts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlement"
                                },
                                "example": {
                                    "id": 0,
                                    "state": "string",
                                    "settlementWindows": [
                                        [
                                            {
                                                "id": 0,
                                                "reason": "string",
                                                "state": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "content": [
                                                    {
                                                        "id": 0,
                                                        "state": "string",
                                                        "ledgerAccountType": "string",
                                                        "currencyId": "string",
                                                        "createdDate": "string",
                                                        "changedDate": "string",
                                                        "settlementId": 0
                                                    }
                                                ]
                                            }
                                        ]
                                    ],
                                    "participants": [
                                        {
                                            "id": 0,
                                            "accounts": [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "PENDING_SETTLEMENT",
                                                    "netSettlementAmount": {
                                                        "amount": 0,
                                                        "currency": "string"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "getSettlementsByParams",
                    "sampled"
                ],
                "summary": "getSettlementsByParams",
                "description": "Returns Settlements as per parameter(s).",
                "operationId": "getSettlementsByParams",
                "parameters": [
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "A valid currency to filter on.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participantId",
                        "in": "query",
                        "description": "A valid participant Id to filter on.\n",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "settlementWindowId",
                        "in": "query",
                        "description": "A valid Settlement Window Id to filter on.\n",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "A valid Account Id to filter on.\n",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "A settlement state to filter on.  \n",
                        "schema": {
                            "enum": [
                                "PENDING_SETTLEMENT",
                                "PS_TRANSFERS_RECORDED",
                                "PS_TRANSFERS_RESERVED",
                                "PS_TRANSFERS_COMMITTED",
                                "SETTLING",
                                "SETTLED",
                                "ABORTED"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The start date for query (relates to central-ledger.settlement.createdDate). Can be used together with `toDateTime'. eg 2017-07-20T17:32:28Z\n",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The end date for query (relates to central-ledger.settlement.createdDate). Can be used together with `fromDateTime'. eg 2017-07-21T17:32:28Z\n",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "fromSettlementWindowDateTime",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The start date for query (relates to central-ledger.settlementWindow.createdDate). Can be used together with `toDateTime'. eg 2017-07-20T17:32:28Z\n",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toSettlementWindowDateTime",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The end date for query (relates to central-ledger.settlementWindow.createdDate). Can be used together with `fromDateTime'. eg 2017-07-21T17:32:28Z\n",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settlement window(s) returned by the filtering parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlements"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "state": "string",
                                        "settlementWindows": [
                                            [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "string",
                                                    "createdDate": "string",
                                                    "changedDate": "string",
                                                    "content": [
                                                        {
                                                            "id": 0,
                                                            "state": "string",
                                                            "ledgerAccountType": "string",
                                                            "currencyId": "string",
                                                            "createdDate": "string",
                                                            "changedDate": "string",
                                                            "settlementId": 0
                                                        }
                                                    ]
                                                }
                                            ]
                                        ],
                                        "participants": [
                                            {
                                                "id": 0,
                                                "accounts": [
                                                    {
                                                        "id": 0,
                                                        "reason": "string",
                                                        "state": "PENDING_SETTLEMENT",
                                                        "netSettlementAmount": {
                                                            "amount": 0,
                                                            "currency": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "getHealth"
                ],
                "summary": "getHealth",
                "description": "Gets the health of the service and sub-services (i.e. database).",
                "operationId": "getHealth",
                "responses": {
                    "200": {
                        "description": "A valid and health service.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "502": {
                        "description": "API is live, but error connecting to required sub-service.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/settlements/{id}": {
            "get": {
                "tags": [
                    "getSettlementById",
                    "sampled"
                ],
                "summary": "getSettlementById",
                "description": "Returns Settlement(s) as per parameters/filter criteria.",
                "operationId": "getSettlementById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A valid Settlement Id.\n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settlement successfully returned by the filtering/Query parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlement"
                                },
                                "example": {
                                    "id": 0,
                                    "state": "string",
                                    "settlementWindows": [
                                        [
                                            {
                                                "id": 0,
                                                "reason": "string",
                                                "state": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "content": [
                                                    {
                                                        "id": 0,
                                                        "state": "string",
                                                        "ledgerAccountType": "string",
                                                        "currencyId": "string",
                                                        "createdDate": "string",
                                                        "changedDate": "string",
                                                        "settlementId": 0
                                                    }
                                                ]
                                            }
                                        ]
                                    ],
                                    "participants": [
                                        {
                                            "id": 0,
                                            "accounts": [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "PENDING_SETTLEMENT",
                                                    "netSettlementAmount": {
                                                        "amount": 0,
                                                        "currency": "string"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "sampled",
                    "updateSettlementById"
                ],
                "summary": "updateSettlementById",
                "description": "Acknowledgement of settlement by updating with Settlement Id.",
                "operationId": "updateSettlementById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A valid Settlement Id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A JSON object containing settlement update info.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlementUpdateBySettlementIdPayload"
                            },
                            "example": {
                                "state": "ABORTED",
                                "reason": "string",
                                "externalReference": "string",
                                "participants": [
                                    {
                                        "id": 0,
                                        "accounts": [
                                            {
                                                "id": 0,
                                                "reason": "reason",
                                                "state": "SETTLED",
                                                "externalReference": "external-reference-abc123"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settlements updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlement"
                                },
                                "example": {
                                    "id": 0,
                                    "state": "string",
                                    "settlementWindows": [
                                        [
                                            {
                                                "id": 0,
                                                "reason": "string",
                                                "state": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "content": [
                                                    {
                                                        "id": 0,
                                                        "state": "string",
                                                        "ledgerAccountType": "string",
                                                        "currencyId": "string",
                                                        "createdDate": "string",
                                                        "changedDate": "string",
                                                        "settlementId": 0
                                                    }
                                                ]
                                            }
                                        ]
                                    ],
                                    "participants": [
                                        {
                                            "id": 0,
                                            "accounts": [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "PENDING_SETTLEMENT",
                                                    "netSettlementAmount": {
                                                        "amount": 0,
                                                        "currency": "string"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settlements/{sid}/participants/{pid}": {
            "get": {
                "tags": [
                    "getSettlementBySettlementParticipant",
                    "sampled"
                ],
                "summary": "getSettlementBySettlementParticipant",
                "description": "Returns Settlement(s) as per filter criteria.",
                "operationId": "getSettlementBySettlementParticipant",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "A valid Settlement Id.\n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "A valid Participant Id.\n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settlement, settlement windows and settlement accounts returned by the filtering parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlement"
                                },
                                "example": {
                                    "id": 0,
                                    "state": "string",
                                    "settlementWindows": [
                                        [
                                            {
                                                "id": 0,
                                                "reason": "string",
                                                "state": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "content": [
                                                    {
                                                        "id": 0,
                                                        "state": "string",
                                                        "ledgerAccountType": "string",
                                                        "currencyId": "string",
                                                        "createdDate": "string",
                                                        "changedDate": "string",
                                                        "settlementId": 0
                                                    }
                                                ]
                                            }
                                        ]
                                    ],
                                    "participants": [
                                        {
                                            "id": 0,
                                            "accounts": [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "PENDING_SETTLEMENT",
                                                    "netSettlementAmount": {
                                                        "amount": 0,
                                                        "currency": "string"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "sampled",
                    "updateSettlementBySettlementParticipant"
                ],
                "summary": "updateSettlementBySettlementParticipant",
                "description": "Acknowledgement of settlement by updating the reason and state by SP.",
                "operationId": "updateSettlementBySettlementParticipant",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "A valid Settlement Id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "A valid Participant Id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A JSON object containing settlement update info.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlementUpdateBySettlementParticipantPayload"
                            },
                            "example": {
                                "accounts": [
                                    {
                                        "id": 0,
                                        "reason": "reason",
                                        "state": "SETTLED",
                                        "externalReference": "external-reference-abc123"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settlements updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlement"
                                },
                                "example": {
                                    "id": 0,
                                    "state": "string",
                                    "settlementWindows": [
                                        [
                                            {
                                                "id": 0,
                                                "reason": "string",
                                                "state": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "content": [
                                                    {
                                                        "id": 0,
                                                        "state": "string",
                                                        "ledgerAccountType": "string",
                                                        "currencyId": "string",
                                                        "createdDate": "string",
                                                        "changedDate": "string",
                                                        "settlementId": 0
                                                    }
                                                ]
                                            }
                                        ]
                                    ],
                                    "participants": [
                                        {
                                            "id": 0,
                                            "accounts": [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "PENDING_SETTLEMENT",
                                                    "netSettlementAmount": {
                                                        "amount": 0,
                                                        "currency": "string"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settlements/{sid}/participants/{pid}/accounts/{aid}": {
            "get": {
                "tags": [
                    "getSettlementBySettlementParticipantAccount",
                    "sampled"
                ],
                "summary": "getSettlementBySettlementParticipantAccount",
                "description": "Returns Settlement(s) as per filter criteria.",
                "operationId": "getSettlementBySettlementParticipantAccount",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "A valid Settlement Id.\n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "A valid Participant Id.\n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "aid",
                        "in": "path",
                        "description": "A valid Account Id.\n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settlement, settlement windows and settlement accounts returned by the filtering parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlement"
                                },
                                "example": {
                                    "id": 0,
                                    "state": "string",
                                    "settlementWindows": [
                                        [
                                            {
                                                "id": 0,
                                                "reason": "string",
                                                "state": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "content": [
                                                    {
                                                        "id": 0,
                                                        "state": "string",
                                                        "ledgerAccountType": "string",
                                                        "currencyId": "string",
                                                        "createdDate": "string",
                                                        "changedDate": "string",
                                                        "settlementId": 0
                                                    }
                                                ]
                                            }
                                        ]
                                    ],
                                    "participants": [
                                        {
                                            "id": 0,
                                            "accounts": [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "PENDING_SETTLEMENT",
                                                    "netSettlementAmount": {
                                                        "amount": 0,
                                                        "currency": "string"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "sampled",
                    "updateSettlementBySettlementParticipantAccount"
                ],
                "summary": "updateSettlementBySettlementParticipantAccount",
                "description": "Acknowledgement of settlement by updating the reason and state by SPA.",
                "operationId": "updateSettlementBySettlementParticipantAccount",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "A valid Settlement Id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "A valid Participant Id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "aid",
                        "in": "path",
                        "description": "A valid Account Id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A JSON object containing settlement update info.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlementUpdateBySettlementParticipantAccount"
                            },
                            "example": {
                                "state": "SETTLED",
                                "reason": "string",
                                "externalReference": "external-reference-abc123"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settlements updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settlement"
                                },
                                "example": {
                                    "id": 0,
                                    "state": "string",
                                    "settlementWindows": [
                                        [
                                            {
                                                "id": 0,
                                                "reason": "string",
                                                "state": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "content": [
                                                    {
                                                        "id": 0,
                                                        "state": "string",
                                                        "ledgerAccountType": "string",
                                                        "currencyId": "string",
                                                        "createdDate": "string",
                                                        "changedDate": "string",
                                                        "settlementId": 0
                                                    }
                                                ]
                                            }
                                        ]
                                    ],
                                    "participants": [
                                        {
                                            "id": 0,
                                            "accounts": [
                                                {
                                                    "id": 0,
                                                    "reason": "string",
                                                    "state": "PENDING_SETTLEMENT",
                                                    "netSettlementAmount": {
                                                        "amount": 0,
                                                        "currency": "string"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settlementWindows": {
            "get": {
                "tags": [
                    "getSettlementWindowsByParams",
                    "sampled"
                ],
                "summary": "getSettlementWindowsByParams",
                "description": "Returns Settlement Windows as per parameter(s).",
                "operationId": "getSettlementWindowsByParams",
                "parameters": [
                    {
                        "name": "participantId",
                        "in": "query",
                        "description": "A valid participant Id to filter on.\n",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "A settlement window state to filter on.\n",
                        "schema": {
                            "enum": [
                                "OPEN",
                                "CLOSED",
                                "PENDING_SETTLEMENT",
                                "SETTLED",
                                "ABORTED"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The start date for query (relates to central-ledger.settlementWindow.createdDate). Can be used together with `toDateTime'. eg 2017-07-20T17:32:28Z\n",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The end date for query (relates to central-ledger.settlementWindow.createdDate). Can be used together with `fromDateTime'. eg 2017-07-21T17:32:28Z\n",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "A valid currency to filter on.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settlement window(s) returned by the filtering parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementWindows"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "reason": "string",
                                        "state": "string",
                                        "createdDate": "string",
                                        "changedDate": "string",
                                        "content": [
                                            {
                                                "id": 0,
                                                "state": "string",
                                                "ledgerAccountType": "string",
                                                "currencyId": "string",
                                                "createdDate": "string",
                                                "changedDate": "string",
                                                "settlementId": 0
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorisation information is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorInformation": {
                                        "errorCode": 0,
                                        "errorDescription": "string",
                                        "extensionList": {
                                            "extension": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Account Id"
                    },
                    "reason": {
                        "type": "string",
                        "description": "TBD"
                    },
                    "state": {
                        "type": "string",
                        "example": "PENDING_SETTLEMENT"
                    },
                    "netSettlementAmount": {
                        "$ref": "#/components/schemas/netSettlementAmount"
                    }
                }
            },
            "SettlementUpdateBySettlementIdPayload": {
                "type": "object",
                "properties": {
                    "state": {
                        "enum": [
                            "ABORTED",
                            "INVALID"
                        ],
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "externalReference": {
                        "type": "string"
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementUpdateBySettlementIDOuterPayload"
                        }
                    }
                }
            },
            "SettlementUpdateBySettlementIDOuterPayload": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Participant Id"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementUpdateBySettlementIdInnerPayload"
                        }
                    }
                }
            },
            "SettlementUpdateBySettlementIdInnerPayload": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Participant Currency Id"
                    },
                    "reason": {
                        "type": "string",
                        "example": "reason"
                    },
                    "state": {
                        "enum": [
                            "PENDING_SETTLEMENT",
                            "PS_TRANSFERS_RECORDED",
                            "PS_TRANSFERS_RESERVED",
                            "PS_TRANSFERS_COMMITTED",
                            "SETTLED"
                        ],
                        "type": "string",
                        "example": "SETTLED"
                    },
                    "externalReference": {
                        "type": "string",
                        "example": "external-reference-abc123"
                    }
                }
            },
            "SettlementUpdateBySettlementParticipantPayload": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementUpdateBySettlementIdInnerPayload"
                        }
                    }
                }
            },
            "Accounts": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Participant Currency Id"
                    },
                    "reason": {
                        "type": "string",
                        "description": "TBD"
                    },
                    "state": {
                        "type": "string",
                        "example": "PENDING_SETTLEMENT"
                    },
                    "netSettlementAmount": {
                        "$ref": "#/components/schemas/netSettlementAmount"
                    }
                }
            },
            "SettlementWindowClosurePayload": {
                "required": [
                    "state",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "state": {
                        "enum": [
                            "CLOSED"
                        ],
                        "type": "string",
                        "example": "CLOSED"
                    },
                    "reason": {
                        "type": "string",
                        "example": "string"
                    }
                }
            },
            "SettlementUpdateBySettlementParticipantAccount": {
                "required": [
                    "state",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "state": {
                        "enum": [
                            "PENDING_SETTLEMENT",
                            "PS_TRANSFERS_RECORDED",
                            "PS_TRANSFERS_RESERVED",
                            "PS_TRANSFERS_COMMITTED",
                            "SETTLED"
                        ],
                        "type": "string",
                        "example": "SETTLED"
                    },
                    "reason": {
                        "type": "string",
                        "example": "string"
                    },
                    "externalReference": {
                        "type": "string",
                        "example": "external-reference-abc123"
                    }
                }
            },
            "SettlementEventPayload": {
                "required": [
                    "settlementModel",
                    "reason",
                    "settlementWindows"
                ],
                "type": "object",
                "properties": {
                    "settlementModel": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "settlementWindows": {
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementWindowId"
                        }
                    }
                }
            },
            "SettlementWindowId": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                }
            },
            "SettlementWindow": {
                "required": [
                    "id",
                    "state",
                    "createdDate"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "changedDate": {
                        "type": "string"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementWindowContent"
                        }
                    }
                }
            },
            "SettlementWindowContent": {
                "required": [
                    "id",
                    "state",
                    "ledgerAccountType",
                    "currencyId",
                    "createdDate"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "ledgerAccountType": {
                        "type": "string"
                    },
                    "currencyId": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "changedDate": {
                        "type": "string"
                    },
                    "settlementId": {
                        "type": "integer"
                    }
                }
            },
            "SettlementWindows": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SettlementWindow"
                }
            },
            "netSettlementAmount": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string"
                    }
                }
            },
            "Participant": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Accounts"
                        }
                    }
                }
            },
            "Settlements": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Settlement"
                }
            },
            "Settlement": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "settlementWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementWindows"
                        }
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Participant"
                        }
                    }
                }
            },
            "Error": {
                "required": [
                    "errorInformation"
                ],
                "properties": {
                    "errorInformation": {
                        "type": "object",
                        "properties": {
                            "errorCode": {
                                "type": "integer"
                            },
                            "errorDescription": {
                                "type": "string"
                            },
                            "extensionList": {
                                "type": "object",
                                "properties": {
                                    "extension": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Extension"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Extension": {
                "required": [
                    "key",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}