{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentName": {
            "value": null,
            "type": "String"
        },
        "vaultsSkuFamily": {
            "type": "String",
            "defaultValue": "A",
            "metadata": {
                "description": "sku family?"
            }
        },
        "vaultsSkuName": {
            "type": "String",
            "defaultValue": "Standard",
            "metadata": {
                "description": "Sku model name?"
            }
        },
        "apiManagementSkuName": {
            "type": "String",
            "defaultValue": "Developer",
            "metadata": {
                "description": "Sku model name?"
            }
        },
        "apiManagementSkuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 7,
            "minValue": 1,
            "metadata": {
                "description": "Sku Capacity"
            }
        },
        "apiManagementMaximumThroughputUnits": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 4,
            "minValue": 1,
            "metadata": {
                "description": "Maximum Throughput Units"
            }
        },
        "apiManagementPublisherEmail": {
            "defaultValue": "johndoe@example.com",
            "value": null,
            "type": "String"
        },
        "apiManagementNotificationEmail": {
            "defaultValue": "johndoe@example.com",
            "value": null,
            "type": "String"
        },

        "dbMySQLSkuName": {
            "type": "String",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "Sku VM model name?"
            }
        },
        "dbMySQLSkuTier": {
            "type": "String",
            "defaultValue": "GeneralPurpose",
            "metadata": {
                "description": "Burstable,GeneralPurpose,sku tier?"
            }
        },
        "dbMySqlStorageIops": {
            "type": "Int",
            "defaultValue": 360,
            "metadata": {
                "description": "MySql Storage iops"
            }
        },
        "dbMySQLStorageSizeMB": {
            "type": "Int",
            "defaultValue": 20480,
            "metadata": {
                "description": "MySql Storage Size in MegaBytes"
            }
        },
        "aksSkuName": {
            "type": "String",
            "defaultValue": "Basic",
            "metadata": {
                "description": "Sku model name?"
            }
        },
        "aksSkuTier": {
            "type": "String",
            "defaultValue": "Free",
            "metadata": {
                "description": "sku tier?"
            }
        },
        "aksLoadBalancerSku": {
            "type": "string",
            "defaultValue": "Standard",
            "metadata": {
                "description": "The name of the Managed Cluster resource.CHANGETHIS"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of the Managed Cluster resource."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 30,
            "maxValue": 1023,
            "minValue": 30,
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            }
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 50,
            "minValue": 1,
            "metadata": {
                "description": "The number of nodes for the cluster."
            }
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_B4ms",
            "value": null,
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "linuxAdminUsername": {
            "type": "string",
            "defaultValue": "vmadmin",
            "metadata": {
                "description": "User name for the Linux Virtual Machines."
            }
        },
        "sshRSAPublicKey": {
            "type": "string",
            "metadata": {
                "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
            }
        },
        "dbMySQLAdministratorLogin": {
            "type": "String",
            "defaultValue": "testuser",
            "metadata": {
                "description": "Username of the Administrator"
            }
        },
        "dbMySQLAdministratorLoginPassword": {
            "type": "SecureString",
            "defaultValue": "securepassword123",
            "metadata": {
                "description": "Password of the Administrator"
            }
        },
        "dnsName": {
            "type": "String",
            "defaultValue": "mojaloop.onazure.org",
            "metadata": {
                "description": "dns to be used"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        }
    },
    "functions": [],
    "variables": {
        "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/script.sh', parameters('_artifactsLocationSasToken')))]",
        "cDeploymentFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/deployment.yaml', parameters('_artifactsLocationSasToken')))]",
        "cLedgerFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/CentralLedgerAPI.json', parameters('_artifactsLocationSasToken')))]",
        "cSettlementsFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/CentralSettlements.json', parameters('_artifactsLocationSasToken')))]",
        "mySQLFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/mysqlscript.sql', parameters('_artifactsLocationSasToken')))]",
        "uniqueName": "[uniquestring(resourceGroup().id,parameters('deploymentName'))]",
        "deploymentUnique": "[concat(parameters('deploymentName'),  variables('uniqueName'))]",
        "service_APIMAN_name": "[concat('apiman', variables('deploymentUnique'))]",
        "vaults_KeyV_name": "[concat('keyvault', variables('uniqueName'))]",
        "vaultUrlPrefix": "[concat('keyvault', variables('uniqueName'))]",
        "clusterName": "[concat('aks', variables('deploymentUnique'))]",
        "dbMySQLServerName": "[concat('mysql', variables('deploymentUnique'))]",
        "identityName": "[concat('id', variables('deploymentUnique'))]",
        "dnsPrefix": "[concat('aks', variables('deploymentUnique'))]",
        "dotDns": "[concat('.', parameters('dnsName'))]",
        "mojaloopNamespace": "mjloop",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "aksadmin": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8')]",
        "akssuperadmin": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b1ff04bb-8a4e-4dc4-8eb5-8693973ce19b')]",
        "apiManContributer": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '312a565d-c81f-4fd8-895a-4e21e48d571c')]",
        "dbMySQLapi": "2021-05-01",
        "vaultsUri": "[concat('https://', concat(variables('vaultUrlPrefix'), '.vault.azure.net/'))]",
        "roleNameGuid1": "[guid(concat(resourceGroup().id, 'Contributor'))]",
        "roleNameGuid2": "[guid(concat(resourceGroup().id, 'Azure Kubernetes Service Cluster Admin Role'))]",
        "roleNameGuid3": "[guid(concat(resourceGroup().id, 'Azure Kubernetes Service RBAC Cluster Admin'))]",
        "roleNameGuid4": "[guid(concat(resourceGroup().id, 'API Management Service Contributor'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-11-01-preview",
            "name": "[variables('vaults_KeyV_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "family": "[parameters('vaultsSkuFamily')]",
                    "name": "[parameters('vaultsSkuName')]"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "6e0211a4-3776-4ee0-950d-db68998352a0",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "831e48e1-f5a2-4ada-908c-f85ac44fdc39",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "16f29e3e-3bd6-411f-ab05-7518e14e0dbb",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "672bc37e-9e30-4b7a-b445-747957c3e7fd",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "be78e391-72d5-443f-9343-95bdb0b3e151",
                        "permissions": {
                            "secrets": [
                                "List",
                                "Get"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enableRbacAuthorization": false,
                "vaultUri": "[variables('vaultsUri')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2021-05-01",
            "name": "[variables('clusterName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('aksSkuName')]",
                "tier": "[parameters('aksSkuTier')]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "dnsPrefix": "[variables('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "generic",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osDiskType": "Managed",
                        "kubeletDiskType": "OS",
                        "maxPods": 110,
                        "type": "VirtualMachineScaleSets",
                        "enableAutoScaling": false,
                        "enableNodePublicIP": false,
                        "enableEncryptionAtHost": false,
                        "enableUltraSSD": false,
                        "mode": "System",
                        "osType": "Linux",
                        "osSKU": "Ubuntu",
                        "enableFIPS": false,
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "[parameters('linuxAdminUsername')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[parameters('sshRSAPublicKey')]"
                            }
                        ]
                    },
                    "servicePrincipalProfile": {
                        "clientId": "msi"
                    },
                    "enableRBAC": true,
                    "dnsPrefix": "[variables('dnsPrefix')]",
                    "networkProfile": {
                        "networkPlugin": "kubenet",
                        "loadBalancerSku": "[parameters('aksLoadBalancerSku')]",
                        "loadBalancerProfile": {
                            "managedOutboundIPs": {
                                "count": 1
                            }
                        }
                    },
                    "aadProfile": {
                        "managed": true,
                        "enableAzureRBAC": false
                    },
                    "disableLocalAccounts": false
                }
            }
        },
        {
            "type": "Microsoft.DBforMySQL/flexibleServers",
            "apiVersion": "[variables('dbMySQLapi')]",
            "name": "[variables('dbMySQLServerName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('dbMySQLSkuName')]",
                "tier": "[parameters('dbMySQLSkuTier')]"
            },
            "properties": {
                "administratorLogin": "[parameters('dbMySQLAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('dbMySQLAdministratorLoginPassword')]",
                "storage": {
                    "iops": "[parameters('dbMySqlStorageIops')]",
                    "storageMB": "[parameters('dbMySQLStorageSizeMB')]"
                },
                "version": "5.7"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2021-08-01",
            "name": "[variables('service_APIMAN_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('apiManagementSkuName')]",
                "capacity": "[parameters('apiManagementSkuCapacity')]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "maximumThroughputUnits": "[parameters('apiManagementMaximumThroughputUnits')]",
                "publisherEmail": "[parameters('apiManagementPublisherEmail')]",
                "publisherName": "Microsoft",
                "notificationSenderEmail": "[parameters('apiManagementNotificationEmail')]",
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
                },
                "virtualNetworkType": "None",
                "disableGateway": false,
                "apiVersionConstraint": {},
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('identityName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('roleNameGuid1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('Contributor')]",
                "principalId": "[reference(variables('identityName'), '2018-11-30', 'Full').properties.principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('roleNameGuid2')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('aksadmin')]",
                "principalId": "[reference(variables('identityName'), '2018-11-30', 'Full').properties.principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('roleNameGuid3')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('akssuperadmin')]",
                "principalId": "[reference(variables('identityName'), '2018-11-30', 'Full').properties.principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('roleNameGuid4')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('apiManContributer')]",
                "principalId": "[reference(variables('identityName'), '2018-11-30', 'Full').properties.principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "runShellInline",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('dbMySQLServerName'))]",
                "[resourceId('Microsoft.ApiManagement/service', variables('service_APIMAN_name'))]",
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleNameGuid1'))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleNameGuid2'))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleNameGuid3'))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleNameGuid4'))]"
            ],
            "kind": "AzureCLI",
            "properties": {
                "forceUpdateTag": "1",
                "containerSettings": {
                    "containerGroupName": "mycustomaci"
                },
                "azCliVersion": "2.36.0",
                "environmentVariables": [
                    {
                        "name": "clusterName",
                        "value": "[variables('clusterName')]"
                    },
                    {
                        "name": "resourceGroup",
                        "value": "[resourceGroup().name]"
                    },
                    {
                        "name": "subscriptionId",
                        "value": "[subscription().subscriptionId]"
                    },
                    {
                        "name": "serviceAPIName",
                        "value": "[variables('service_APIMAN_name')]"
                    },
                    {
                        "name": "urlMojaCluster_host",
                        "value": "[variables('dotDNS')]"
                    },
                    {
                        "name": "urlMojaCluster_hostdfs",
                        "value": "[parameters('dnsName')]"
                    },
                    {
                        "name": "namespace",
                        "value": "[variables('mojaloopNamespace')]"
                    },
                    {
                        "name": "dbMySQLServerName",
                        "value": "[variables('dbMySQLServerName')]"
                    },
                    {
                        "name": "dbMySQLAdministratorLogin",
                        "value": "[parameters('dbMySQLAdministratorLogin')]"
                    },
                    {
                        "name": "dbMySQLAdministratorLoginPassword",
                        "value": "[parameters('dbMySQLAdministratorLoginPassword')]"
                    }
                ],
                "primaryScriptUri": "[variables('scriptFileUri')]",
                "supportingScriptUris": [
                    "[variables('cDeploymentFileUri')]",
                    "[variables('cLedgerFileUri')]",
                    "[variables('cSettlementsFileUri')]",
                    "[variables('mySQLFileUri')]"
                ],
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        }
    ],
    "outputs": {
        "result": {
            "value": "[reference('runShellInline').outputs]",
            "type": "object"
        }
    }
}
